%% using options: [{service,"AssetService"},{port,"AssetServiceInterfacePort"},{generate,client},{namespaces,[{"https://adwords.google.com/api/adwords/cm/v201806",undefined}]},{generate_tests,none},{http_client,soap_client_inets},{client_name,"asset_service_client"},{strict,true}]

%%% This file contains record and type decarations that are used by the WSDL.
%%%
%%% It also contains a macro 'INTERFACE' that is used to make information
%%% about the WSDL available to the SOAP implementation.
%%%
%%% It is possible (and in some cases necessary) to change the name of the
%%% record fields.
%%%
%%% It is possible to add default values, but be aware that these will only
%%% be used when *writing* an xml document.

%%% Records used to represent fault response messages:

-record(faultdetail, {uri :: string(),
                      tag :: string(),
                      text :: string()}).

-record(faultcode, {uri :: string(),
                    code :: string(),
                    subcode :: #faultcode{} % only v. 1.2
                   }).

-record(faultreason, {text :: string(),
                      language :: string()}).

-record(soap_fault_1_1, {faultcode :: #faultcode{},
                         faultstring :: string(),
                         faultactor :: string(),
                         detail :: [#faultdetail{}]}).

-record(soap_fault_1_2, {code :: #faultcode{},
                         reason :: [#faultreason{}],
                         role :: string(),
                         detail :: [#faultdetail{}]}).

%% xsd:QName values are translated to #qname{} records.
-record(qname, {uri :: string(),
                localPart :: string(),
                prefix :: string(),
                mappedPrefix :: string()}).



-record(mutateResponse, {
	rval :: 'AssetReturnValue'() | undefined}).

-type mutateResponse() :: #mutateResponse{}.


-record(mutate, {
	operations :: ['AssetOperation'()] | undefined}).

-type mutate() :: #mutate{}.


-record(getResponse, {
	rval :: 'AssetPage'() | undefined}).

-type getResponse() :: #getResponse{}.


-record(get, {
	selector :: 'Selector'() | undefined}).

-type get() :: #get{}.


-record('StringLengthError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'StringLengthError'() :: #'StringLengthError'{}.


-record('StringFormatError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'StringFormatError'() :: #'StringFormatError'{}.


-record('SoapResponseHeader', {
	requestId :: string() | undefined,
	serviceName :: string() | undefined,
	methodName :: string() | undefined,
	operations :: string() | undefined,
	responseTime :: string() | undefined}).

-type 'SoapResponseHeader'() :: #'SoapResponseHeader'{}.


-record('SoapHeader', {
	clientCustomerId :: string() | undefined,
	developerToken :: string() | undefined,
	userAgent :: string() | undefined,
	validateOnly :: boolean() | undefined,
	partialFailure :: boolean() | undefined}).

-type 'SoapHeader'() :: #'SoapHeader'{}.


-record('SizeLimitError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'SizeLimitError'() :: #'SizeLimitError'{}.


-record('Selector', {
	fields :: [string()] | undefined,
	predicates :: ['Predicate'()] | undefined,
	dateRange :: 'DateRange'() | undefined,
	ordering :: ['OrderBy'()] | undefined,
	paging :: 'Paging'() | undefined}).

-type 'Selector'() :: #'Selector'{}.


-record('RequiredError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RequiredError'() :: #'RequiredError'{}.


-record('RequestError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RequestError'() :: #'RequestError'{}.


-record('RejectedError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RejectedError'() :: #'RejectedError'{}.


-record('ReadOnlyError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'ReadOnlyError'() :: #'ReadOnlyError'{}.


-record('RateExceededError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined,
	rateName :: string() | undefined,
	rateScope :: string() | undefined,
	retryAfterSeconds :: integer() | undefined}).

-type 'RateExceededError'() :: #'RateExceededError'{}.


-record('RangeError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RangeError'() :: #'RangeError'{}.


-record('QuotaCheckError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'QuotaCheckError'() :: #'QuotaCheckError'{}.


-record('Predicate', {
	field :: string() | undefined,
	operator :: string() | undefined,
	values :: [string()] | undefined}).

-type 'Predicate'() :: #'Predicate'{}.


-record('Paging', {
	startIndex :: integer() | undefined,
	numberResults :: integer() | undefined}).

-type 'Paging'() :: #'Paging'{}.


-record('Page', {
	totalNumEntries :: integer() | undefined,
	'Page.Type' :: string() | undefined}).

-type 'Page'() :: #'Page'{}.


-record('OrderBy', {
	field :: string() | undefined,
	sortOrder :: string() | undefined}).

-type 'OrderBy'() :: #'OrderBy'{}.


-record('OperatorError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'OperatorError'() :: #'OperatorError'{}.


-record('OperationAccessDenied', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'OperationAccessDenied'() :: #'OperationAccessDenied'{}.


-record('Operation', {
	operator :: string() | undefined,
	'Operation.Type' :: string() | undefined}).

-type 'Operation'() :: #'Operation'{}.


-record('NotEmptyError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'NotEmptyError'() :: #'NotEmptyError'{}.


-record('MediaUploadError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'MediaUploadError'() :: #'MediaUploadError'{}.


-record('ListReturnValue', {
	'ListReturnValue.Type' :: string() | undefined}).

-type 'ListReturnValue'() :: #'ListReturnValue'{}.


-record('InternalApiError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'InternalApiError'() :: #'InternalApiError'{}.


-record('ImageDimensionInfo', {
	imageHeight :: integer() | undefined,
	imageWidth :: integer() | undefined,
	imageUrl :: string() | undefined}).

-type 'ImageDimensionInfo'() :: #'ImageDimensionInfo'{}.


-record('ImageAsset', {
	assetId :: string() | undefined,
	assetName :: string() | undefined,
	assetSubtype :: string() | undefined,
	assetStatus :: string() | undefined,
	'Asset.Type' :: string() | undefined,
	imageData :: string() | undefined,
	imageFileSize :: string() | undefined,
	imageMimeType :: string() | undefined,
	fullSizeInfo :: 'ImageDimensionInfo'() | undefined}).

-type 'ImageAsset'() :: #'ImageAsset'{}.


-record('IdError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'IdError'() :: #'IdError'{}.


-record('FieldPathElement', {
	field :: string() | undefined,
	index :: integer() | undefined}).

-type 'FieldPathElement'() :: #'FieldPathElement'{}.


-record('EntityNotFound', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'EntityNotFound'() :: #'EntityNotFound'{}.


-record('DistinctError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'DistinctError'() :: #'DistinctError'{}.


-record('DateRange', {
	min :: string() | undefined,
	max :: string() | undefined}).

-type 'DateRange'() :: #'DateRange'{}.


-record('DatabaseError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'DatabaseError'() :: #'DatabaseError'{}.


-record('ClientTermsError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'ClientTermsError'() :: #'ClientTermsError'{}.


-record('AuthorizationError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'AuthorizationError'() :: #'AuthorizationError'{}.


-record('AuthenticationError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'AuthenticationError'() :: #'AuthenticationError'{}.


-record('AssetReturnValue', {
	'ListReturnValue.Type' :: string() | undefined,
	value :: ['Asset'() | 'ImageAsset'()] | undefined}).

-type 'AssetReturnValue'() :: #'AssetReturnValue'{}.


-record('AssetPage', {
	totalNumEntries :: integer() | undefined,
	'Page.Type' :: string() | undefined,
	entries :: ['Asset'() | 'ImageAsset'()] | undefined}).

-type 'AssetPage'() :: #'AssetPage'{}.


-record('AssetOperation', {
	operator :: string() | undefined,
	'Operation.Type' :: string() | undefined,
	operand :: 'Asset'() | 'ImageAsset'() | undefined}).

-type 'AssetOperation'() :: #'AssetOperation'{}.


-record('AssetError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'AssetError'() :: #'AssetError'{}.


-record('Asset', {
	assetId :: string() | undefined,
	assetName :: string() | undefined,
	assetSubtype :: string() | undefined,
	assetStatus :: string() | undefined,
	'Asset.Type' :: string() | undefined}).

-type 'Asset'() :: #'Asset'{}.


-record('ApplicationException', {
	message :: string() | undefined,
	'ApplicationException.Type' :: string() | undefined}).

-type 'ApplicationException'() :: #'ApplicationException'{}.


-record('ApiException', {
	message :: string() | undefined,
	'ApplicationException.Type' :: string() | undefined,
	errors :: ['ApiError'() | 'StringLengthError'() | 'StringFormatError'() | 'SizeLimitError'() | 'RequiredError'() | 'RequestError'() | 'RejectedError'() | 'ReadOnlyError'() | 'RateExceededError'() | 'RangeError'() | 'QuotaCheckError'() | 'OperatorError'() | 'OperationAccessDenied'() | 'NotEmptyError'() | 'MediaUploadError'() | 'InternalApiError'() | 'IdError'() | 'EntityNotFound'() | 'DistinctError'() | 'DatabaseError'() | 'ClientTermsError'() | 'AuthorizationError'() | 'AuthenticationError'() | 'AssetError'()] | undefined}).

-type 'ApiException'() :: #'ApiException'{}.


-record('ApiError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined}).

-type 'ApiError'() :: #'ApiError'{}.
-define(INTERFACE, {interface,"AssetService",asset,'1.1',soap_client_inets,
                    soap_server_cowboy_1,undefined,asset_service_client,[],
                    "https://adwords.google.com/api/adwords/cm/v201806",
                    "http://schemas.xmlsoap.org/soap/envelope/","document",
                    undefined,
                    "https://adwords.google.com/api/adwords/cm/v201806/AssetService",
                    "AssetServiceInterfacePort","AssetServiceSoapBinding",
                    "AssetServiceInterface",
                    [{op,"get",get,[],undefined,request_response,get,
                      getResponse,undefined},
                     {op,"mutate",mutate,[],undefined,request_response,
                      mutate,mutateResponse,undefined}],
                    {model,
                     [{type,'_document',sequence,
                       [{el,
                         [{alt,get,get,[],1,1,true,undefined},
                          {alt,getResponse,getResponse,[],1,1,true,undefined},
                          {alt,'ApiExceptionFault','ApiException',[],1,1,
                           true,undefined},
                          {alt,mutate,mutate,[],1,1,true,undefined},
                          {alt,mutateResponse,mutateResponse,[],1,1,true,
                           undefined},
                          {alt,'RequestHeader','SoapHeader',[],1,1,true,
                           undefined},
                          {alt,'ResponseHeader','SoapResponseHeader',[],1,1,
                           true,undefined}],
                         1,1,undefined,2}],
                       [],undefined,undefined,1,1,1,false,undefined},
                      {type,mutateResponse,sequence,
                       [{el,
                         [{alt,rval,'AssetReturnValue',[],1,1,true,undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutate,sequence,
                       [{el,
                         [{alt,operations,'AssetOperation',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,getResponse,sequence,
                       [{el,
                         [{alt,rval,'AssetPage',[],1,1,true,undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,get,sequence,
                       [{el,
                         [{alt,selector,'Selector',[],1,1,true,undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,'StringLengthError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'StringLengthError'},
                      {type,'StringFormatError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'StringFormatError'},
                      {type,'SoapResponseHeader',sequence,
                       [{el,
                         [{alt,requestId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,serviceName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,methodName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,operations,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,responseTime,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'SoapHeader',sequence,
                       [{el,
                         [{alt,clientCustomerId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,developerToken,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,userAgent,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,validateOnly,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,partialFailure,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'SizeLimitError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'SizeLimitError'},
                      {type,'Selector',sequence,
                       [{el,
                         [{alt,fields,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,unbound,undefined,2},
                        {el,
                         [{alt,predicates,'Predicate',[],1,1,true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,dateRange,'DateRange',[],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,ordering,'OrderBy',[],1,1,true,undefined}],
                         0,unbound,undefined,5},
                        {el,
                         [{alt,paging,'Paging',[],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'RequiredError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RequiredError'},
                      {type,'RequestError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RequestError'},
                      {type,'RejectedError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RejectedError'},
                      {type,'ReadOnlyError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'ReadOnlyError'},
                      {type,'RateExceededError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7},
                        {el,
                         [{alt,rateName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,8},
                        {el,
                         [{alt,rateScope,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,9},
                        {el,
                         [{alt,retryAfterSeconds,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,10}],
                       [],undefined,undefined,10,1,1,undefined,
                       'RateExceededError'},
                      {type,'RangeError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RangeError'},
                      {type,'QuotaCheckError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'QuotaCheckError'},
                      {type,'Predicate',sequence,
                       [{el,
                         [{alt,field,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,values,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,unbound,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,undefined},
                      {type,'Paging',sequence,
                       [{el,
                         [{alt,startIndex,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,numberResults,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'Page',sequence,
                       [{el,
                         [{alt,totalNumEntries,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Page.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'OrderBy',sequence,
                       [{el,
                         [{alt,field,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,sortOrder,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'OperatorError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'OperatorError'},
                      {type,'OperationAccessDenied',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'OperationAccessDenied'},
                      {type,'Operation',sequence,
                       [{el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Operation.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'NotEmptyError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'NotEmptyError'},
                      {type,'MediaUploadError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'MediaUploadError'},
                      {type,'ListReturnValue',sequence,
                       [{el,
                         [{alt,'ListReturnValue.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,'InternalApiError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'InternalApiError'},
                      {type,'ImageDimensionInfo',sequence,
                       [{el,
                         [{alt,imageHeight,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,imageWidth,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,imageUrl,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,undefined},
                      {type,'ImageAsset',sequence,
                       [{el,
                         [{alt,assetId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,assetName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,assetSubtype,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,assetStatus,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'Asset.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,imageData,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,7},
                        {el,
                         [{alt,imageFileSize,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,8},
                        {el,
                         [{alt,imageMimeType,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,9},
                        {el,
                         [{alt,fullSizeInfo,'ImageDimensionInfo',[],1,1,true,
                           undefined}],
                         0,1,undefined,10}],
                       [],undefined,undefined,10,1,1,undefined,'ImageAsset'},
                      {type,'IdError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'IdError'},
                      {type,'FieldPathElement',sequence,
                       [{el,
                         [{alt,field,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,index,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'EntityNotFound',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'EntityNotFound'},
                      {type,'DistinctError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'DistinctError'},
                      {type,'DateRange',sequence,
                       [{el,
                         [{alt,min,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,max,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'DatabaseError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'DatabaseError'},
                      {type,'ClientTermsError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'ClientTermsError'},
                      {type,'AuthorizationError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'AuthorizationError'},
                      {type,'AuthenticationError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'AuthenticationError'},
                      {type,'AssetReturnValue',sequence,
                       [{el,
                         [{alt,'ListReturnValue.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,value,'Asset',[],1,1,true,undefined}],
                         0,unbound,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,
                       'AssetReturnValue'},
                      {type,'AssetPage',sequence,
                       [{el,
                         [{alt,totalNumEntries,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Page.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,entries,'Asset',[],1,1,true,undefined}],
                         0,unbound,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,'AssetPage'},
                      {type,'AssetOperation',sequence,
                       [{el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Operation.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,operand,'Asset',[],1,1,true,undefined}],
                         0,1,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,
                       'AssetOperation'},
                      {type,'AssetError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'AssetError'},
                      {type,'Asset',sequence,
                       [{el,
                         [{alt,assetId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,assetName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,assetSubtype,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,assetStatus,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'Asset.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'ApplicationException',sequence,
                       [{el,
                         [{alt,message,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'ApplicationException.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'ApiException',sequence,
                       [{el,
                         [{alt,message,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'ApplicationException.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,errors,'ApiError',[],1,1,true,undefined}],
                         0,unbound,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,'ApiException'},
                      {type,'ApiError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined}],
                     [{ns,"http://www.w3.org/2001/XMLSchema","xsd",qualified},
                      {ns,
                       "https://adwords.google.com/api/adwords/cm/v201806",
                       undefined,qualified}],
                     "https://adwords.google.com/api/adwords/cm/v201806",
                     [{'StringLengthError','ApiError'},
                      {'StringFormatError','ApiError'},
                      {'SizeLimitError','ApiError'},
                      {'RequiredError','ApiError'},
                      {'RequestError','ApiError'},
                      {'RejectedError','ApiError'},
                      {'ReadOnlyError','ApiError'},
                      {'RateExceededError','ApiError'},
                      {'RangeError','ApiError'},
                      {'QuotaCheckError','ApiError'},
                      {'OperatorError','ApiError'},
                      {'OperationAccessDenied','ApiError'},
                      {'NotEmptyError','ApiError'},
                      {'MediaUploadError','ApiError'},
                      {'InternalApiError','ApiError'},
                      {'ImageAsset','Asset'},
                      {'IdError','ApiError'},
                      {'EntityNotFound','ApiError'},
                      {'DistinctError','ApiError'},
                      {'DatabaseError','ApiError'},
                      {'ClientTermsError','ApiError'},
                      {'AuthorizationError','ApiError'},
                      {'AuthenticationError','ApiError'},
                      {'AssetReturnValue','ListReturnValue'},
                      {'AssetPage','Page'},
                      {'AssetOperation','Operation'},
                      {'AssetError','ApiError'},
                      {'ApiException','ApplicationException'}],
                     false,skip},
                    1,undefined,
                    [{"https://adwords.google.com/api/adwords/cm/v201806",
                      undefined}]}).
