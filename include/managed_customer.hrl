
%% generated by soap from: /Users/dragosdumitru/Work/google-multi/priv/managed_customer.wsdl
%% for service "ManagedCustomerService" and port "ManagedCustomerServiceInterfacePort"
%% using options: [{service,"ManagedCustomerService"},{port,"ManagedCustomerServiceInterfacePort"},{generate,client},{namespaces,[{"https://adwords.google.com/api/adwords/mcm/v201809",undefined}]},{generate_tests,none},{http_client,soap_client_inets},{client_name,"managed_customer_service_client"},{strict,true}]

%%% This file contains record and type decarations that are used by the WSDL.
%%%
%%% It also contains a macro 'INTERFACE' that is used to make information
%%% about the WSDL available to the SOAP implementation.
%%%
%%% It is possible (and in some cases necessary) to change the name of the
%%% record fields.
%%%
%%% It is possible to add default values, but be aware that these will only
%%% be used when *writing* an xml document.

%%% Records used to represent fault response messages:

-record(faultdetail, {uri :: string(),
                      tag :: string(),
                      text :: string()}).

-record(faultcode, {uri :: string(),
                    code :: string(),
                    subcode :: #faultcode{} % only v. 1.2
                   }).

-record(faultreason, {text :: string(),
                      language :: string()}).

-record(soap_fault_1_1, {faultcode :: #faultcode{},
                         faultstring :: string(),
                         faultactor :: string(),
                         detail :: [#faultdetail{}]}).

-record(soap_fault_1_2, {code :: #faultcode{},
                         reason :: [#faultreason{}],
                         role :: string(),
                         detail :: [#faultdetail{}]}).

%% xsd:QName values are translated to #qname{} records.
-record(qname, {uri :: string(),
                localPart :: string(),
                prefix :: string(),
                mappedPrefix :: string()}).



-record('AccountLabel', {
	id :: string() | undefined,
	name :: string() | undefined}).

-type 'AccountLabel'() :: #'AccountLabel'{}.


-record('ApiError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined}).

-type 'ApiError'() :: #'ApiError'{}.


-record('ApiException', {
	message :: string() | undefined,
	'ApplicationException.Type' :: string() | undefined,
	errors :: ['ApiError'() | 'AuthenticationError'() | 'AuthorizationError'() | 'ClientTermsError'() | 'DatabaseError'() | 'DateError'() | 'DistinctError'() | 'IdError'() | 'InternalApiError'() | 'ManagedCustomerServiceError'() | 'NotEmptyError'() | 'NullError'() | 'OperationAccessDenied'() | 'OperatorError'() | 'QuotaCheckError'() | 'RangeError'() | 'RateExceededError'() | 'ReadOnlyError'() | 'RejectedError'() | 'RequestError'() | 'RequiredError'() | 'SelectorError'() | 'SizeLimitError'() | 'StringFormatError'() | 'StringLengthError'()] | undefined}).

-type 'ApiException'() :: #'ApiException'{}.


-record('ApplicationException', {
	message :: string() | undefined,
	'ApplicationException.Type' :: string() | undefined}).

-type 'ApplicationException'() :: #'ApplicationException'{}.


-record('AuthenticationError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'AuthenticationError'() :: #'AuthenticationError'{}.


-record('AuthorizationError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'AuthorizationError'() :: #'AuthorizationError'{}.


-record('ClientTermsError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'ClientTermsError'() :: #'ClientTermsError'{}.


-record('DatabaseError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'DatabaseError'() :: #'DatabaseError'{}.


-record('DateError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'DateError'() :: #'DateError'{}.


-record('DateRange', {
	min :: string() | undefined,
	max :: string() | undefined}).

-type 'DateRange'() :: #'DateRange'{}.


-record('DistinctError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'DistinctError'() :: #'DistinctError'{}.


-record('FieldPathElement', {
	field :: string() | undefined,
	index :: integer() | undefined}).

-type 'FieldPathElement'() :: #'FieldPathElement'{}.


-record('IdError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'IdError'() :: #'IdError'{}.


-record('InternalApiError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'InternalApiError'() :: #'InternalApiError'{}.


-record('LinkOperation', {
	operator :: string() | undefined,
	'Operation.Type' :: string() | undefined,
	operand :: 'ManagedCustomerLink'() | undefined}).

-type 'LinkOperation'() :: #'LinkOperation'{}.


-record('ManagedCustomer', {
	name :: string() | undefined,
	customerId :: string() | undefined,
	canManageClients :: boolean() | undefined,
	currencyCode :: string() | undefined,
	dateTimeZone :: string() | undefined,
	testAccount :: boolean() | undefined,
	accountLabels :: ['AccountLabel'()] | undefined,
	excludeHiddenAccounts :: boolean() | undefined}).

-type 'ManagedCustomer'() :: #'ManagedCustomer'{}.


-record('ManagedCustomerLabel', {
	labelId :: string() | undefined,
	customerId :: string() | undefined}).

-type 'ManagedCustomerLabel'() :: #'ManagedCustomerLabel'{}.


-record('ManagedCustomerLabelOperation', {
	operator :: string() | undefined,
	'Operation.Type' :: string() | undefined,
	operand :: 'ManagedCustomerLabel'() | undefined}).

-type 'ManagedCustomerLabelOperation'() :: #'ManagedCustomerLabelOperation'{}.


-record('ManagedCustomerLabelReturnValue', {
	value :: ['ManagedCustomerLabel'()] | undefined}).

-type 'ManagedCustomerLabelReturnValue'() :: #'ManagedCustomerLabelReturnValue'{}.


-record('ManagedCustomerLink', {
	managerCustomerId :: string() | undefined,
	clientCustomerId :: string() | undefined,
	linkStatus :: string() | undefined,
	pendingDescriptiveName :: string() | undefined,
	isHidden :: boolean() | undefined}).

-type 'ManagedCustomerLink'() :: #'ManagedCustomerLink'{}.


-record('ManagedCustomerOperation', {
	operator :: string() | undefined,
	'Operation.Type' :: string() | undefined,
	operand :: 'ManagedCustomer'() | undefined,
	inviteeEmail :: string() | undefined,
	inviteeRole :: string() | undefined}).

-type 'ManagedCustomerOperation'() :: #'ManagedCustomerOperation'{}.


-record('ManagedCustomerPage', {
	totalNumEntries :: integer() | undefined,
	'Page.Type' :: string() | undefined,
	entries :: ['ManagedCustomer'()] | undefined,
	links :: ['ManagedCustomerLink'()] | undefined}).

-type 'ManagedCustomerPage'() :: #'ManagedCustomerPage'{}.


-record('ManagedCustomerReturnValue', {
	value :: ['ManagedCustomer'()] | undefined}).

-type 'ManagedCustomerReturnValue'() :: #'ManagedCustomerReturnValue'{}.


-record('ManagedCustomerServiceError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined,
	customerIds :: [string()] | undefined}).

-type 'ManagedCustomerServiceError'() :: #'ManagedCustomerServiceError'{}.


-record('MoveOperation', {
	operator :: string() | undefined,
	'Operation.Type' :: string() | undefined,
	operand :: 'ManagedCustomerLink'() | undefined,
	oldManagerCustomerId :: string() | undefined}).

-type 'MoveOperation'() :: #'MoveOperation'{}.


-record('MutateLinkResults', {
	links :: ['ManagedCustomerLink'()] | undefined}).

-type 'MutateLinkResults'() :: #'MutateLinkResults'{}.


-record('MutateManagerResults', {
	links :: ['ManagedCustomerLink'()] | undefined}).

-type 'MutateManagerResults'() :: #'MutateManagerResults'{}.


-record('NotEmptyError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'NotEmptyError'() :: #'NotEmptyError'{}.


-record('NullError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'NullError'() :: #'NullError'{}.


-record('Operation', {
	operator :: string() | undefined,
	'Operation.Type' :: string() | undefined}).

-type 'Operation'() :: #'Operation'{}.


-record('OperationAccessDenied', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'OperationAccessDenied'() :: #'OperationAccessDenied'{}.


-record('OperatorError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'OperatorError'() :: #'OperatorError'{}.


-record('OrderBy', {
	field :: string() | undefined,
	sortOrder :: string() | undefined}).

-type 'OrderBy'() :: #'OrderBy'{}.


-record('Page', {
	totalNumEntries :: integer() | undefined,
	'Page.Type' :: string() | undefined}).

-type 'Page'() :: #'Page'{}.


-record('Paging', {
	startIndex :: integer() | undefined,
	numberResults :: integer() | undefined}).

-type 'Paging'() :: #'Paging'{}.


-record('PendingInvitation', {
	manager :: 'ManagedCustomer'() | undefined,
	client :: 'ManagedCustomer'() | undefined,
	creationDate :: string() | undefined,
	expirationDate :: string() | undefined}).

-type 'PendingInvitation'() :: #'PendingInvitation'{}.


-record('PendingInvitationSelector', {
	managerCustomerIds :: [string()] | undefined,
	clientCustomerIds :: [string()] | undefined}).

-type 'PendingInvitationSelector'() :: #'PendingInvitationSelector'{}.


-record('Predicate', {
	field :: string() | undefined,
	operator :: string() | undefined,
	values :: [string()] | undefined}).

-type 'Predicate'() :: #'Predicate'{}.


-record('QuotaCheckError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'QuotaCheckError'() :: #'QuotaCheckError'{}.


-record('RangeError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RangeError'() :: #'RangeError'{}.


-record('RateExceededError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined,
	rateName :: string() | undefined,
	rateScope :: string() | undefined,
	retryAfterSeconds :: integer() | undefined}).

-type 'RateExceededError'() :: #'RateExceededError'{}.


-record('ReadOnlyError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'ReadOnlyError'() :: #'ReadOnlyError'{}.


-record('RejectedError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RejectedError'() :: #'RejectedError'{}.


-record('RequestError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RequestError'() :: #'RequestError'{}.


-record('RequiredError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'RequiredError'() :: #'RequiredError'{}.


-record('Selector', {
	fields :: [string()] | undefined,
	predicates :: ['Predicate'()] | undefined,
	dateRange :: 'DateRange'() | undefined,
	ordering :: ['OrderBy'()] | undefined,
	paging :: 'Paging'() | undefined}).

-type 'Selector'() :: #'Selector'{}.


-record('SelectorError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'SelectorError'() :: #'SelectorError'{}.


-record('SizeLimitError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'SizeLimitError'() :: #'SizeLimitError'{}.


-record('SoapHeader', {
	clientCustomerId :: string() | undefined,
	developerToken :: string() | undefined,
	userAgent :: string() | undefined,
	validateOnly :: boolean() | undefined,
	partialFailure :: boolean() | undefined}).

-type 'SoapHeader'() :: #'SoapHeader'{}.


-record('SoapResponseHeader', {
	requestId :: string() | undefined,
	serviceName :: string() | undefined,
	methodName :: string() | undefined,
	operations :: string() | undefined,
	responseTime :: string() | undefined}).

-type 'SoapResponseHeader'() :: #'SoapResponseHeader'{}.


-record('StringFormatError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'StringFormatError'() :: #'StringFormatError'{}.


-record('StringLengthError', {
	fieldPath :: string() | undefined,
	fieldPathElements :: ['FieldPathElement'()] | undefined,
	trigger :: string() | undefined,
	errorString :: string() | undefined,
	'ApiError.Type' :: string() | undefined,
	reason :: string() | undefined}).

-type 'StringLengthError'() :: #'StringLengthError'{}.


-record(get, {
	serviceSelector :: 'Selector'() | undefined}).

-type get() :: #get{}.


-record(getPendingInvitations, {
	selector :: 'PendingInvitationSelector'() | undefined}).

-type getPendingInvitations() :: #getPendingInvitations{}.


-record(getPendingInvitationsResponse, {
	rval :: ['PendingInvitation'()] | undefined}).

-type getPendingInvitationsResponse() :: #getPendingInvitationsResponse{}.


-record(getResponse, {
	rval :: 'ManagedCustomerPage'() | undefined}).

-type getResponse() :: #getResponse{}.


-record(mutate, {
	operations :: ['ManagedCustomerOperation'()] | undefined}).

-type mutate() :: #mutate{}.


-record(mutateLabel, {
	operations :: ['ManagedCustomerLabelOperation'()] | undefined}).

-type mutateLabel() :: #mutateLabel{}.


-record(mutateLabelResponse, {
	rval :: 'ManagedCustomerLabelReturnValue'() | undefined}).

-type mutateLabelResponse() :: #mutateLabelResponse{}.


-record(mutateLink, {
	operations :: ['LinkOperation'()] | undefined}).

-type mutateLink() :: #mutateLink{}.


-record(mutateLinkResponse, {
	rval :: 'MutateLinkResults'() | undefined}).

-type mutateLinkResponse() :: #mutateLinkResponse{}.


-record(mutateManager, {
	operations :: ['MoveOperation'()] | undefined}).

-type mutateManager() :: #mutateManager{}.


-record(mutateManagerResponse, {
	rval :: 'MutateManagerResults'() | undefined}).

-type mutateManagerResponse() :: #mutateManagerResponse{}.


-record(mutateResponse, {
	rval :: 'ManagedCustomerReturnValue'() | undefined}).

-type mutateResponse() :: #mutateResponse{}.
-define(INTERFACE, {interface,"ManagedCustomerService",managed_customer,
                    '1.1',soap_client_inets,soap_server_cowboy_1,undefined,
                    managed_customer_service_client,[],
                    "https://adwords.google.com/api/adwords/mcm/v201809",
                    "http://schemas.xmlsoap.org/soap/envelope/","document",
                    undefined,
                    "https://adwords.google.com/api/adwords/mcm/v201809/ManagedCustomerService",
                    "ManagedCustomerServiceInterfacePort",
                    "ManagedCustomerServiceSoapBinding",
                    "ManagedCustomerServiceInterface",
                    [{op,"get",get,[],undefined,request_response,get,
                      getResponse,undefined},
                     {op,"getPendingInvitations",getPendingInvitations,[],
                      undefined,request_response,getPendingInvitations,
                      getPendingInvitationsResponse,undefined},
                     {op,"mutate",mutate,[],undefined,request_response,
                      mutate,mutateResponse,undefined},
                     {op,"mutateLabel",mutateLabel,[],undefined,
                      request_response,mutateLabel,mutateLabelResponse,
                      undefined},
                     {op,"mutateLink",mutateLink,[],undefined,
                      request_response,mutateLink,mutateLinkResponse,
                      undefined},
                     {op,"mutateManager",mutateManager,[],undefined,
                      request_response,mutateManager,mutateManagerResponse,
                      undefined}],
                    {model,
                     [{type,'_document',sequence,
                       [{el,
                         [{alt,mutateResponse,mutateResponse,[],1,1,true,
                           undefined},
                          {alt,mutateManagerResponse,mutateManagerResponse,
                           [],1,1,true,undefined},
                          {alt,mutateManager,mutateManager,[],1,1,true,
                           undefined},
                          {alt,mutateLinkResponse,mutateLinkResponse,[],1,1,
                           true,undefined},
                          {alt,mutateLink,mutateLink,[],1,1,true,undefined},
                          {alt,mutateLabelResponse,mutateLabelResponse,[],1,
                           1,true,undefined},
                          {alt,mutateLabel,mutateLabel,[],1,1,true,undefined},
                          {alt,mutate,mutate,[],1,1,true,undefined},
                          {alt,getResponse,getResponse,[],1,1,true,undefined},
                          {alt,getPendingInvitationsResponse,
                           getPendingInvitationsResponse,[],1,1,true,
                           undefined},
                          {alt,getPendingInvitations,getPendingInvitations,
                           [],1,1,true,undefined},
                          {alt,get,get,[],1,1,true,undefined},
                          {alt,'ResponseHeader','SoapResponseHeader',[],1,1,
                           true,undefined},
                          {alt,'RequestHeader','SoapHeader',[],1,1,true,
                           undefined},
                          {alt,'ApiExceptionFault','ApiException',[],1,1,
                           true,undefined}],
                         1,1,undefined,2}],
                       [],undefined,undefined,1,1,1,false,undefined},
                      {type,'AccountLabel',sequence,
                       [{el,
                         [{alt,id,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,name,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'ApiError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'ApiException',sequence,
                       [{el,
                         [{alt,message,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'ApplicationException.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,errors,'ApiError',[],1,1,true,undefined}],
                         0,unbound,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,'ApiException'},
                      {type,'ApplicationException',sequence,
                       [{el,
                         [{alt,message,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'ApplicationException.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'AuthenticationError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'AuthenticationError'},
                      {type,'AuthorizationError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'AuthorizationError'},
                      {type,'ClientTermsError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'ClientTermsError'},
                      {type,'DatabaseError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'DatabaseError'},
                      {type,'DateError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'DateError'},
                      {type,'DateRange',sequence,
                       [{el,
                         [{alt,min,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,max,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'DistinctError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'DistinctError'},
                      {type,'FieldPathElement',sequence,
                       [{el,
                         [{alt,field,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,index,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'IdError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'IdError'},
                      {type,'InternalApiError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'InternalApiError'},
                      {type,'LinkOperation',sequence,
                       [{el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Operation.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,operand,'ManagedCustomerLink',[],1,1,true,
                           undefined}],
                         0,1,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,'LinkOperation'},
                      {type,'ManagedCustomer',sequence,
                       [{el,
                         [{alt,name,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,customerId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,canManageClients,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,currencyCode,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,dateTimeZone,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,testAccount,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,7},
                        {el,
                         [{alt,accountLabels,'AccountLabel',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,8},
                        {el,
                         [{alt,excludeHiddenAccounts,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,9}],
                       [],undefined,undefined,9,1,1,undefined,undefined},
                      {type,'ManagedCustomerLabel',sequence,
                       [{el,
                         [{alt,labelId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,customerId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'ManagedCustomerLabelOperation',sequence,
                       [{el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Operation.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,operand,'ManagedCustomerLabel',[],1,1,true,
                           undefined}],
                         0,1,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,
                       'ManagedCustomerLabelOperation'},
                      {type,'ManagedCustomerLabelReturnValue',sequence,
                       [{el,
                         [{alt,value,'ManagedCustomerLabel',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,'ManagedCustomerLink',sequence,
                       [{el,
                         [{alt,managerCustomerId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,clientCustomerId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,linkStatus,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,pendingDescriptiveName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,isHidden,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'ManagedCustomerOperation',sequence,
                       [{el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Operation.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,operand,'ManagedCustomer',[],1,1,true,
                           undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,inviteeEmail,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,inviteeRole,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,
                       'ManagedCustomerOperation'},
                      {type,'ManagedCustomerPage',sequence,
                       [{el,
                         [{alt,totalNumEntries,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Page.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,entries,'ManagedCustomer',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,4},
                        {el,
                         [{alt,links,'ManagedCustomerLink',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,5}],
                       [],undefined,undefined,5,1,1,undefined,
                       'ManagedCustomerPage'},
                      {type,'ManagedCustomerReturnValue',sequence,
                       [{el,
                         [{alt,value,'ManagedCustomer',[],1,1,true,undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,'ManagedCustomerServiceError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7},
                        {el,
                         [{alt,customerIds,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,unbound,undefined,8}],
                       [],undefined,undefined,8,1,1,undefined,
                       'ManagedCustomerServiceError'},
                      {type,'MoveOperation',sequence,
                       [{el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Operation.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,operand,'ManagedCustomerLink',[],1,1,true,
                           undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,oldManagerCustomerId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5}],
                       [],undefined,undefined,5,1,1,undefined,'MoveOperation'},
                      {type,'MutateLinkResults',sequence,
                       [{el,
                         [{alt,links,'ManagedCustomerLink',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,'MutateManagerResults',sequence,
                       [{el,
                         [{alt,links,'ManagedCustomerLink',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,'NotEmptyError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'NotEmptyError'},
                      {type,'NullError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'NullError'},
                      {type,'Operation',sequence,
                       [{el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Operation.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'OperationAccessDenied',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'OperationAccessDenied'},
                      {type,'OperatorError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'OperatorError'},
                      {type,'OrderBy',sequence,
                       [{el,
                         [{alt,field,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,sortOrder,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'Page',sequence,
                       [{el,
                         [{alt,totalNumEntries,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,'Page.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'Paging',sequence,
                       [{el,
                         [{alt,startIndex,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,numberResults,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'PendingInvitation',sequence,
                       [{el,
                         [{alt,manager,'ManagedCustomer',[],1,1,true,
                           undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,client,'ManagedCustomer',[],1,1,true,
                           undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,creationDate,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,expirationDate,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5}],
                       [],undefined,undefined,5,1,1,undefined,undefined},
                      {type,'PendingInvitationSelector',sequence,
                       [{el,
                         [{alt,managerCustomerIds,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,unbound,undefined,2},
                        {el,
                         [{alt,clientCustomerIds,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,unbound,undefined,3}],
                       [],undefined,undefined,3,1,1,undefined,undefined},
                      {type,'Predicate',sequence,
                       [{el,
                         [{alt,field,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,operator,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,values,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,unbound,undefined,4}],
                       [],undefined,undefined,4,1,1,undefined,undefined},
                      {type,'QuotaCheckError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'QuotaCheckError'},
                      {type,'RangeError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RangeError'},
                      {type,'RateExceededError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7},
                        {el,
                         [{alt,rateName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,8},
                        {el,
                         [{alt,rateScope,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,9},
                        {el,
                         [{alt,retryAfterSeconds,
                           {'#PCDATA',integer},
                           [],1,1,true,undefined}],
                         0,1,undefined,10}],
                       [],undefined,undefined,10,1,1,undefined,
                       'RateExceededError'},
                      {type,'ReadOnlyError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'ReadOnlyError'},
                      {type,'RejectedError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RejectedError'},
                      {type,'RequestError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RequestError'},
                      {type,'RequiredError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'RequiredError'},
                      {type,'Selector',sequence,
                       [{el,
                         [{alt,fields,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,unbound,undefined,2},
                        {el,
                         [{alt,predicates,'Predicate',[],1,1,true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,dateRange,'DateRange',[],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,ordering,'OrderBy',[],1,1,true,undefined}],
                         0,unbound,undefined,5},
                        {el,
                         [{alt,paging,'Paging',[],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'SelectorError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,'SelectorError'},
                      {type,'SizeLimitError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'SizeLimitError'},
                      {type,'SoapHeader',sequence,
                       [{el,
                         [{alt,clientCustomerId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,developerToken,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,userAgent,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,validateOnly,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,partialFailure,
                           {'#PCDATA',bool},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'SoapResponseHeader',sequence,
                       [{el,
                         [{alt,requestId,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,serviceName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,3},
                        {el,
                         [{alt,methodName,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,operations,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,responseTime,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6}],
                       [],undefined,undefined,6,1,1,undefined,undefined},
                      {type,'StringFormatError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'StringFormatError'},
                      {type,'StringLengthError',sequence,
                       [{el,
                         [{alt,fieldPath,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,2},
                        {el,
                         [{alt,fieldPathElements,'FieldPathElement',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,3},
                        {el,
                         [{alt,trigger,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,4},
                        {el,
                         [{alt,errorString,
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,5},
                        {el,
                         [{alt,'ApiError.Type',
                           {'#PCDATA',char},
                           [],1,1,true,undefined}],
                         0,1,undefined,6},
                        {el,
                         [{alt,reason,{'#PCDATA',char},[],1,1,true,undefined}],
                         0,1,undefined,7}],
                       [],undefined,undefined,7,1,1,undefined,
                       'StringLengthError'},
                      {type,get,sequence,
                       [{el,
                         [{alt,serviceSelector,'Selector',[],1,1,true,
                           undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,getPendingInvitations,sequence,
                       [{el,
                         [{alt,selector,'PendingInvitationSelector',[],1,1,
                           true,undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,getPendingInvitationsResponse,sequence,
                       [{el,
                         [{alt,rval,'PendingInvitation',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,getResponse,sequence,
                       [{el,
                         [{alt,rval,'ManagedCustomerPage',[],1,1,true,
                           undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutate,sequence,
                       [{el,
                         [{alt,operations,'ManagedCustomerOperation',[],1,1,
                           true,undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutateLabel,sequence,
                       [{el,
                         [{alt,operations,'ManagedCustomerLabelOperation',[],
                           1,1,true,undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutateLabelResponse,sequence,
                       [{el,
                         [{alt,rval,'ManagedCustomerLabelReturnValue',[],1,1,
                           true,undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutateLink,sequence,
                       [{el,
                         [{alt,operations,'LinkOperation',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutateLinkResponse,sequence,
                       [{el,
                         [{alt,rval,'MutateLinkResults',[],1,1,true,
                           undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutateManager,sequence,
                       [{el,
                         [{alt,operations,'MoveOperation',[],1,1,true,
                           undefined}],
                         0,unbound,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutateManagerResponse,sequence,
                       [{el,
                         [{alt,rval,'MutateManagerResults',[],1,1,true,
                           undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined},
                      {type,mutateResponse,sequence,
                       [{el,
                         [{alt,rval,'ManagedCustomerReturnValue',[],1,1,true,
                           undefined}],
                         0,1,undefined,2}],
                       [],undefined,undefined,2,1,1,undefined,undefined}],
                     [{ns,"http://www.w3.org/2001/XMLSchema","xsd",qualified},
                      {ns,
                       "https://adwords.google.com/api/adwords/mcm/v201809",
                       undefined,qualified}],
                     "https://adwords.google.com/api/adwords/mcm/v201809",
                     [{'ApiException','ApplicationException'},
                      {'AuthenticationError','ApiError'},
                      {'AuthorizationError','ApiError'},
                      {'ClientTermsError','ApiError'},
                      {'DatabaseError','ApiError'},
                      {'DateError','ApiError'},
                      {'DistinctError','ApiError'},
                      {'IdError','ApiError'},
                      {'InternalApiError','ApiError'},
                      {'LinkOperation','Operation'},
                      {'ManagedCustomerLabelOperation','Operation'},
                      {'ManagedCustomerOperation','Operation'},
                      {'ManagedCustomerPage','Page'},
                      {'ManagedCustomerServiceError','ApiError'},
                      {'MoveOperation','Operation'},
                      {'NotEmptyError','ApiError'},
                      {'NullError','ApiError'},
                      {'OperationAccessDenied','ApiError'},
                      {'OperatorError','ApiError'},
                      {'QuotaCheckError','ApiError'},
                      {'RangeError','ApiError'},
                      {'RateExceededError','ApiError'},
                      {'ReadOnlyError','ApiError'},
                      {'RejectedError','ApiError'},
                      {'RequestError','ApiError'},
                      {'RequiredError','ApiError'},
                      {'SelectorError','ApiError'},
                      {'SizeLimitError','ApiError'},
                      {'StringFormatError','ApiError'},
                      {'StringLengthError','ApiError'}],
                     false,skip},
                    2,undefined,
                    [{"https://adwords.google.com/api/adwords/mcm/v201809",
                      undefined},
                     {"https://adwords.google.com/api/adwords/mcm/v201809",
                      undefined}]}).
